{"version":3,"sources":["Characterlist.js","Character.js","Characterprofile.js","App.js","serviceWorker.js","index.js"],"names":["Characterlist","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","name","id","father","mother","books","react_default","a","createElement","react_router_dom","to","pathname","characterId","className","src","concat","alt","Component","Character","Users","_this2","fetch","then","response","json","user","setState","ch","map","c","i","src_Characterlist","key","url","CharacterProfile","culture","born","died","titles","aliases","localStorage","getItem","JSON","parse","location","res","character","catch","err","console","log","Promise","all","book","resp","texts","text","prevState","toConsumableArray","nextProps","nextState","setItem","stringify","Date","now","_this$state","App","Fragment","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c36f769c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nclass Characterlist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        const {name,id,father,mother,books}=this.props;\r\n        return ( <Link to={{\r\n            pathname:'/profile',\r\n            state:{\r\n                characterId:id,\r\n                father:father,\r\n                mother:mother,\r\n                books:books\r\n            }\r\n        }}>\r\n            <div className='tc bg-light-green dib br3 pa2 ma2 grow ' >\r\n            <img src={`https://robohash.org/${id}`} alt='user'/>\r\n          <div>\r\n          <p className='f4 b helvetica' >{name}</p>\r\n          </div>\r\n          </div>\r\n        </Link>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Characterlist;","import React, { Component } from 'react'\r\nimport Characterlist from './Characterlist';\r\nclass Character extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            Users:[]\r\n         }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://www.anapioficeandfire.com/api/characters?page=2&pageSize=50')\r\n        .then(response=>response.json())\r\n        .then(user=>this.setState({Users:user}))\r\n          }\r\n    render() { \r\n             const ch=this.state.Users;\r\n        return (ch.map((c,i)=>{\r\n            return <Characterlist key={ch[i].url} name={ch[i].name} id={ch[i].url} father={ch[i].father} mother={ch[i].mother} books={ch[i].books}/>\r\n        })\r\n          );\r\n    }\r\n}\r\n \r\nexport default Character;","import React, { Component } from 'react'\r\nclass CharacterProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            name:'',\r\n            culture:'',\r\n            born:'',\r\n            died:'',\r\n            titles:[],\r\n            aliases:[],\r\n            father:'',\r\n            mother:'',\r\n            books:[],\r\n            }\r\n    }\r\n    componentWillMount(){\r\n        localStorage.getItem('state')&&this.setState({\r\n            state:JSON.parse(localStorage.getItem('state'))\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        \r\n        const characterId=this.props.location.state.characterId;\r\n        const father=this.props.location.state.father;\r\n        const mother=this.props.location.state.mother;\r\n        const books=this.props.location.state.books; \r\n           fetch(characterId).then(res=>res.json()).then(character=>this.setState({\r\n            name:character.name,\r\n            culture:character.culture,\r\n            born:character.born,\r\n            died:character.died,\r\n            titles:character.titles,\r\n            aliases:character.aliases,\r\n            }))\r\n        fetch(father).then(res=>res.json()).then(user=>this.setState({\r\n            father:user.name\r\n        })).catch(err=>{console.log(\"invalid father character id\")})\r\n        fetch(mother).then(res=>res.json()).then(user=>this.setState({\r\n            mother:user.name\r\n        })).catch(err=>{console.log(\"invalid mother charcater id\")})\r\n        Promise.all(books.map(book=>fetch(book)\r\n        .then(resp=>resp.json())))\r\n        .then(texts=>{texts.map((text,i)=>this.setState(prevState=>({books:[...prevState.books,texts[i].name]})))})\r\n        \r\n          \r\n    }\r\n         componentWillUpdate(nextProps, nextState) {\r\n             localStorage.setItem('state',JSON.stringify(this.state))\r\n            localStorage.setItem('statedate',Date.now())\r\n            }\r\n           \r\n    render() {\r\n         \r\n        const {name,culture,born,died,titles,aliases,father,mother,books}=this.state;\r\n            return ( <div className='f3 garamond '>\r\n            <p className='ba '><span className='b'>Name:</span> {name}</p>\r\n            <p className='ba '><span className='b'>Culture:</span> {culture}</p>\r\n             <p className='ba '><span className='b'>Born: </span>{born}</p>\r\n             <p className='ba '><span className='b'>Died:</span> {died}</p>\r\n            <p className='ba '><span className='b'>Titles:</span> {titles}</p>\r\n            <p className='ba '> <span className='b'>Aliases:</span> {aliases}</p>\r\n            <p className='ba '><span className='b'>Father:</span> {father}</p>\r\n            <p className='ba '><span className='b'>Mother: </span>{mother}</p>\r\n            <p className='ba '><span className='b'>Books:</span> {books}</p> \r\n                 </div> );\r\n    }\r\n}\r\n \r\nexport default CharacterProfile;","import React,{Component} from 'react';\nimport './App.css';\nimport Character from './Character';\nimport 'tachyons';\nimport {Route,Switch} from 'react-router-dom'\nimport CharacterProfile from './Characterprofile';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return ( <React.Fragment>\n      <Switch>\n       \n        <Route path='/profile' component={CharacterProfile}></Route>\n        <Route exact path='/' component={Character}></Route>\n      </Switch>\n    </React.Fragment> );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<Router><App/></Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}